{"ast":null,"code":"// Importación de módulos y librerías necesarias\nimport axios from \"axios\";\n\n// Definición de constantes para tipos de acciones\nexport const ADD_POKEMON_DETAIL = \"ADD_POKEMON_DETAIL\";\nexport const FILTER_DB = \"FILTER_DB\";\nexport const FILTER_TYPE = \"FILTER_TYPE\";\nexport const GET_ALLPOKEMON = \"GET_ALLPOKEMON\";\nexport const GET_POKEMON_NAME = \"GET_POKEMON_NAME\";\nexport const GET_POKEMON_TYPES = \"GET_POKEMON_TYPES\";\nexport const ORDER_ATAQUEPOKE = \"ORDER_ATAQUEPOKE\";\nexport const ORDER_NAMEPOKE = \"ORDER_NAMEPOKE\";\nexport const POST_POKEMON = \"POST_POKEMON\";\nexport const RESET_DETAIL = \"RESET_DETAIL\";\n\n// Función asíncrona para obtener la lista de pokemon\nexport function addAllPokemon() {\n  const endpoint = \"http://localhost:3001/pokemon\";\n  return async function (dispatch) {\n    let {\n      data\n    } = await axios(endpoint);\n    dispatch({\n      type: GET_ALLPOKEMON,\n      payload: data\n    });\n  };\n}\nexport function addAllTypes() {\n  const endpoint = \"http://localhost:3001/tipo\";\n  return async function (dispatch) {\n    let {\n      data\n    } = await axios(endpoint);\n    console.log(data);\n    dispatch({\n      type: GET_POKEMON_TYPES,\n      payload: data\n    });\n  };\n}\nexport function postPokemon(newPoke) {\n  const endpoint = \"http://localhost:3001/pokemon\";\n  return async function (dispatch) {\n    try {\n      const createPok = await axios.post(endpoint, newPoke);\n      dispatch({\n        type: POST_POKEMON,\n        payload: createPok\n      });\n    } catch (error) {\n      alert(\"Verificar si Pokemon ya Existe\");\n    }\n  };\n}\nexport function addPokemon(name) {\n  const endpoint = \"http://localhost:3001/pokemon?name=\" + name;\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(endpoint);\n      return dispatch({\n        type: GET_POKEMON_NAME,\n        payload: data\n      });\n    } catch (error) {\n      alert(\"Pokemon NOT FOUND!!!\");\n    }\n  };\n}\nexport function addPokDetail(id) {\n  return async dispatch => {\n    console.log(id);\n    const endpoint = `http://localhost:3001/pokemon/${id}`;\n    try {\n      const response = await axios.get(endpoint);\n      const pokemonDetail = await response.data;\n      dispatch({\n        type: ADD_POKEMON_DETAIL,\n        payload: pokemonDetail\n      });\n    } catch (error) {\n      console.error(\"Error fetching Pokemon details:\", error.message);\n\n      // Puedes agregar un dispatch para manejar el error en Redux si es necesario\n      // dispatch({\n      //   type: ERROR_FETCHING_POKEMON_DETAILS,\n      //   payload: error.message,\n      // });\n    }\n  };\n}\nexport function orderNamePoke(payload) {\n  return {\n    type: ORDER_NAMEPOKE,\n    payload\n  };\n}\nexport function orderAtackPoke(payload) {\n  return {\n    type: ORDER_ATAQUEPOKE,\n    payload\n  };\n}\nexport function filterTypePok(payload) {\n  return {\n    type: FILTER_TYPE,\n    payload\n  };\n}\nexport function filterDB(payload) {\n  return {\n    type: FILTER_DB,\n    payload\n  };\n}\nexport function resetDetail(payload) {\n  return {\n    type: RESET_DETAIL,\n    payload\n  };\n}","map":{"version":3,"names":["axios","ADD_POKEMON_DETAIL","FILTER_DB","FILTER_TYPE","GET_ALLPOKEMON","GET_POKEMON_NAME","GET_POKEMON_TYPES","ORDER_ATAQUEPOKE","ORDER_NAMEPOKE","POST_POKEMON","RESET_DETAIL","addAllPokemon","endpoint","dispatch","data","type","payload","addAllTypes","console","log","postPokemon","newPoke","createPok","post","error","alert","addPokemon","name","get","addPokDetail","id","response","pokemonDetail","message","orderNamePoke","orderAtackPoke","filterTypePok","filterDB","resetDetail"],"sources":["C:/Users/Hp/OneDrive/Escritorio/Henry/Bootcamp/Proyecto Individual/PI Pokemons/PI Pokemon/PI Pokemon/client/src/Redux/actions/actions.js"],"sourcesContent":["// Importación de módulos y librerías necesarias\r\nimport axios from \"axios\";\r\n\r\n// Definición de constantes para tipos de acciones\r\nexport const ADD_POKEMON_DETAIL = \"ADD_POKEMON_DETAIL\";\r\nexport const FILTER_DB = \"FILTER_DB\";\r\nexport const FILTER_TYPE = \"FILTER_TYPE\";\r\nexport const GET_ALLPOKEMON = \"GET_ALLPOKEMON\";\r\nexport const GET_POKEMON_NAME = \"GET_POKEMON_NAME\";\r\nexport const GET_POKEMON_TYPES = \"GET_POKEMON_TYPES\";\r\nexport const ORDER_ATAQUEPOKE = \"ORDER_ATAQUEPOKE\";\r\nexport const ORDER_NAMEPOKE = \"ORDER_NAMEPOKE\";\r\nexport const POST_POKEMON = \"POST_POKEMON\";\r\nexport const RESET_DETAIL = \"RESET_DETAIL\";\r\n\r\n// Función asíncrona para obtener la lista de pokemon\r\nexport function addAllPokemon() {\r\n  const endpoint = \"http://localhost:3001/pokemon\";\r\n  return async function (dispatch) {\r\n    let { data } = await axios(endpoint);\r\n    dispatch({\r\n      type: GET_ALLPOKEMON,\r\n      payload: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function addAllTypes() {\r\n  const endpoint = \"http://localhost:3001/tipo\";\r\n  return async function (dispatch) {\r\n    let { data } = await axios(endpoint);\r\n    console.log(data);\r\n    dispatch({\r\n      type: GET_POKEMON_TYPES,\r\n      payload: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function postPokemon(newPoke) {\r\n  const endpoint = \"http://localhost:3001/pokemon\";\r\n  return async function (dispatch) {\r\n    try {\r\n      const createPok = await axios.post(endpoint, newPoke);\r\n      dispatch({\r\n        type: POST_POKEMON,\r\n        payload: createPok,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Verificar si Pokemon ya Existe\");\r\n    }\r\n  };\r\n}\r\n\r\nexport function addPokemon(name) {\r\n  const endpoint = \"http://localhost:3001/pokemon?name=\" + name;\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios.get(endpoint);\r\n      return dispatch({\r\n        type: GET_POKEMON_NAME,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Pokemon NOT FOUND!!!\");\r\n    }\r\n  };\r\n}\r\n\r\nexport function addPokDetail(id) {\r\n  return async (dispatch) => {\r\n    console.log(id);\r\n    const endpoint = `http://localhost:3001/pokemon/${id}`;\r\n    try {\r\n      const response = await axios.get(endpoint);\r\n      const pokemonDetail = await response.data;\r\n\r\n      dispatch({\r\n        type: ADD_POKEMON_DETAIL,\r\n        payload: pokemonDetail,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching Pokemon details:\", error.message);\r\n\r\n      // Puedes agregar un dispatch para manejar el error en Redux si es necesario\r\n      // dispatch({\r\n      //   type: ERROR_FETCHING_POKEMON_DETAILS,\r\n      //   payload: error.message,\r\n      // });\r\n    }\r\n  };\r\n}\r\n\r\nexport function orderNamePoke(payload) {\r\n  return {\r\n    type: ORDER_NAMEPOKE,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderAtackPoke(payload) {\r\n  return {\r\n    type: ORDER_ATAQUEPOKE,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterTypePok(payload) {\r\n  return {\r\n    type: FILTER_TYPE,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterDB(payload) {\r\n  return {\r\n    type: FILTER_DB,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function resetDetail(payload) {\r\n  return {\r\n    type: RESET_DETAIL,\r\n    payload,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}