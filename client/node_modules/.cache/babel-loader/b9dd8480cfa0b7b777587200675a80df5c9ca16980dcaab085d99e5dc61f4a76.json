{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Escritorio\\\\Henry\\\\Bootcamp\\\\Proyecto Individual\\\\PI Pokemons\\\\PI Pokemon\\\\PI Pokemon\\\\client\\\\src\\\\components\\\\typeBar\\\\TypeBar.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport Styles from './TypeBar.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterTypePok } from \"../../Redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = props => {\n  _s();\n  // Extraer setPagina de props y types del estado usando useSelector\n  const {\n    setPagina\n  } = props;\n  const {\n    types\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  // Manejar el cambio de tipo de Pokemon\n  const handlerType = e => {\n    console.log(e.target.value.toLowerCase());\n    // Despachar la acción para filtrar por tipo\n    dispatch(filterTypePok(e.target.value));\n    // Reiniciar la página a 1 después de seleccionar un tipo\n    setPagina(1);\n\n    // Desmarcar el tipo después de 10 segundos\n    const checkbox1 = document.getElementById(e.target.value);\n    setTimeout(() => {\n      if (checkbox1.checked) checkbox1.checked = false;\n    }, 10000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      action: \"\",\n      className: Styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tipo de Pokemon:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: Styles.inputBtn,\n        onChange: handlerType,\n        type: \"radio\",\n        id: \"todos\",\n        name: \"valueIs-radio\",\n        value: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: Styles.neonBtn,\n        htmlFor: \"todos\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Styles.span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: Styles.txt,\n          children: \"TODOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), types === null || types === void 0 ? void 0 : types.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: Styles.inputBtn,\n            onChange: handlerType,\n            type: \"radio\",\n            id: t.name,\n            name: \"valueIs-radio\",\n            value: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: Styles.neonBtn,\n            htmlFor: t.name,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: Styles.span\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: Styles.txt,\n              children: t.name.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TypeBar, \"EIZ8GUM6K7tHvnaoTct/cD3zWLE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TypeBar;\nexport default TypeBar;\nvar _c;\n$RefreshReg$(_c, \"TypeBar\");","map":{"version":3,"names":["Styles","useDispatch","useSelector","filterTypePok","jsxDEV","_jsxDEV","TypeBar","props","_s","setPagina","types","state","dispatch","handlerType","e","console","log","target","value","toLowerCase","checkbox1","document","getElementById","setTimeout","checked","children","action","className","container","fileName","_jsxFileName","lineNumber","columnNumber","inputBtn","onChange","type","id","name","neonBtn","htmlFor","span","txt","map","t","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Escritorio/Henry/Bootcamp/Proyecto Individual/PI Pokemons/PI Pokemon/PI Pokemon/client/src/components/typeBar/TypeBar.js"],"sourcesContent":["// import React from \"react\";\r\nimport Styles from './TypeBar.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterTypePok } from \"../../Redux/actions/actions\";\r\n\r\n\r\nconst TypeBar = (props)=>{\r\n    // Extraer setPagina de props y types del estado usando useSelector\r\n    const {setPagina} = props\r\n    const {types} = useSelector((state)=> state)\r\n    const dispatch = useDispatch()\r\n    \r\n    // Manejar el cambio de tipo de Pokemon\r\n    const handlerType = (e)=>{\r\n        console.log(e.target.value.toLowerCase());\r\n        // Despachar la acción para filtrar por tipo\r\n        dispatch(filterTypePok(e.target.value))\r\n        // Reiniciar la página a 1 después de seleccionar un tipo\r\n        setPagina(1)\r\n\r\n        // Desmarcar el tipo después de 10 segundos\r\n        const checkbox1 = document.getElementById(e.target.value)\r\n        setTimeout(() => {\r\n            if(checkbox1.checked) checkbox1.checked = false\r\n        }, 10000);\r\n    };\r\n    \r\n    return( \r\n    <div>   \r\n        <div action=\"\" className={Styles.container}>\r\n        <h3>Tipo de Pokemon:</h3>\r\n         {/* Opción para mostrar todos los tipos */}\r\n        <input\r\n                        className={Styles.inputBtn}\r\n                        onChange={handlerType} \r\n                        type=\"radio\" \r\n                        id='todos' \r\n                        name=\"valueIs-radio\"  \r\n                        value='todos'\r\n                    />\r\n                    <label\r\n                        className={Styles.neonBtn} \r\n                        htmlFor='todos'\r\n                    >\r\n                        <span className={Styles.span}></span>\r\n                        <span className={Styles.txt}>TODOS</span>\r\n                    </label>\r\n         {/* Renderizar opciones para cada tipo */}           \r\n        {types?.map(t=>{\r\n            return (<div key={t.id}>\r\n                    <input\r\n                        className={Styles.inputBtn}\r\n                        onChange={handlerType} \r\n                        type=\"radio\" \r\n                        id={t.name} \r\n                        name=\"valueIs-radio\"  \r\n                        value={t.name}\r\n                    />\r\n                    <label\r\n                        className={Styles.neonBtn} \r\n                        htmlFor={t.name}\r\n                    >\r\n                        <span className={Styles.span}></span>\r\n                        <span className={Styles.txt}>{(t.name).toUpperCase()}</span>\r\n                    </label>\r\n                    </div>\r\n            )\r\n        })}\r\n        </div>\r\n        \r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TypeBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}